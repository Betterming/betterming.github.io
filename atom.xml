<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Betterming&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/8b270e34727df778402d99257198190e</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://betterming.github.io/"/>
  <updated>2018-11-14T10:01:31.788Z</updated>
  <id>https://betterming.github.io/</id>
  
  <author>
    <name>Betterming</name>
    <email>2652214420@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1087 有多少不同的值</title>
    <link href="https://betterming.github.io//posts/29230/"/>
    <id>https://betterming.github.io//posts/29230/</id>
    <published>2018-09-18T16:15:00.000Z</published>
    <updated>2018-11-14T10:01:31.788Z</updated>
    
    <content type="html"><![CDATA[<p>1087 &#x6709;&#x591A;&#x5C11;&#x4E0D;&#x540C;&#x7684;&#x503C; &#xFF08;20 &#x5206;&#xFF09;<br>&#x2003;&#x2003;&#x5F53;&#x81EA;&#x7136;&#x6570; n &#x4F9D;&#x6B21;&#x53D6; 1&#x3001;2&#x3001;3&#x3001;&#x2026;&#x2026;&#x3001;N &#x65F6;&#xFF0C;&#x7B97;&#x5F0F; &#x230A;n/2&#x230B;+&#x230A;n/3&#x230B;+&#x230A;n/5&#x230B; &#x6709;&#x591A;&#x5C11;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x503C;&#xFF1F;&#xFF08;&#x6CE8;&#xFF1A;&#x230A;x&#x230B; &#x4E3A;&#x53D6;&#x6574;&#x51FD;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x4E0D;&#x8D85;&#x8FC7; x &#x7684;&#x6700;&#x5927;&#x81EA;&#x7136;&#x6570;&#xFF0C;&#x5373; x &#x7684;&#x6574;&#x6570;&#x90E8;&#x5206;&#x3002;&#xFF09;<br><a id="more"></a><br>&#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;<br>&#x8F93;&#x5165;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570; N&#xFF08;2 &#x2264; N &#x2264; $10^{4}$)&#x3002;<br>1088 &#x4E09;&#x4EBA;&#x884C; &#xFF08;20 &#x5206;&#xFF09;<br>&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;<br>&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x9898;&#x9762;&#x4E2D;&#x7B97;&#x5F0F;&#x53D6;&#x5230;&#x7684;&#x4E0D;&#x540C;&#x503C;&#x7684;&#x4E2A;&#x6570;&#x3002;</p><p>&#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2017</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1480</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x6709;&#x4E24;&#x79CD;&#x89E3;&#x6CD5;&#xFF1A;<br>&#x7B2C;&#x4E00;&#x79CD;&#xFF1A;<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn = 100001;</span><br><span class="line"></span><br><span class="line">int main() {</span><br><span class="line">  bool flag[maxn] = {false};//&#x901A;&#x8FC7;hash&#x8868;&#x6765;&#x53BB;&#x91CD;</span><br><span class="line">  int n, temp;</span><br><span class="line">  cin&gt;&gt;n;</span><br><span class="line">  for (int i = 1; i &lt;= n; i++) {</span><br><span class="line">    temp = i/2 +i/3 + i/5;</span><br><span class="line">    flag[temp] = true;</span><br><span class="line">  }</span><br><span class="line">  int count = 0;</span><br><span class="line">  for(int i = 0; i &lt; maxn; i++){</span><br><span class="line">    if(flag[i] == true) count++;</span><br><span class="line">  }</span><br><span class="line">  cout&lt;&lt;count&lt;&lt;endl;</span><br><span class="line">  return 0;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x7B2C;&#x4E8C;&#x79CD;&#xFF1A;<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main() {</span><br><span class="line">    int n;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;n);</span><br><span class="line">    set&lt;int&gt; st; //&#x901A;&#x8FC7;&#x96C6;&#x5408;&#x6765;&#x53BB;&#x91CD;</span><br><span class="line"></span><br><span class="line">    for (int i = 1; i &lt;= n; i++) {</span><br><span class="line">        st.insert(i/2 + i/3 + i/5);</span><br><span class="line">    }</span><br><span class="line">    printf(&quot;%d&quot;, st.size());</span><br><span class="line">    return 0;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>&#x2003;&#x2003;&#x592A;&#x7B80;&#x5355;&#x4E86;&#x6CA1;&#x5565;&#x597D;&#x8BB2;&#x7684;&#x3002;&#x3002;&#x3002;</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1087 有多少不同的值 （20 分）&lt;br&gt;&amp;emsp;&amp;emsp;当自然数 n 依次取 1、2、3、……、N 时，算式 ⌊n/2⌋+⌊n/3⌋+⌊n/5⌋ 有多少个不同的值？（注：⌊x⌋ 为取整函数，表示不超过 x 的最大自然数，即 x 的整数部分。）&lt;br&gt;
    
    </summary>
    
      <category term="PAT_B" scheme="https://betterming.github.io/categories/PAT-B/"/>
    
    
      <category term="算法" scheme="https://betterming.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="STL" scheme="https://betterming.github.io/tags/STL/"/>
    
  </entry>
  
</feed>
